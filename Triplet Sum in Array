//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class Main
{
    public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    String inputLine[] = br.readLine().trim().split(" ");
		    int n = Integer.parseInt(inputLine[0]);
		    int X = Integer.parseInt(inputLine[1]);
		    int A[] = new int[n];
		    inputLine = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        A[i] = Integer.parseInt(inputLine[i]);
		    }
		    Solution ob=new Solution();
		    boolean ans = ob.find3Numbers(A, n, X);
		    System.out.println(ans?1:0);
		}
	}
}
// } Driver Code Ends


//User function Template for Java



class Solution {
    public static boolean find3Numbers(int A[], int n, int X) {
        Arrays.sort(A); // Step 1: Sort the array

        for (int i = 0; i < n - 2; i++) { // Step 2
            int left = i + 1;
            int right = n - 1;

            while (left < right) { // Step 3
                int currentSum = A[i] + A[left] + A[right];
                if (currentSum == X) {
                    return true; // Found a triplet
                } else if (currentSum < X) {
                    left++; // Increment left pointer if sum is too small
                } else {
                    right--; // Decrement right pointer if sum is too large
                }
            }
        }
        return false; // No triplet found
    }
}
