//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:

    int smallestSubWithSum(int arr[], int n, int x)
    {
        // Your code goes here   
        
    int curr = 0;
    int minLen = n + 1; // Initialize minLen to a value greater than any possible subarray length

    int start = 0;
    int end = 0;

    while (end < n) {
        // Add elements to the current subarray sum
        while (curr <= x && end < n) {
            curr += arr[end++];
        }

        // Shrink the subarray from the left until curr is no longer greater than x
        while (curr > x && start < n) {
            if (end - start < minLen) {
                minLen = end - start;
            }
            curr -= arr[start++];
        }
    }

    // If minLen is still greater than n, no subarray was found
    if (minLen > n) {
        return 0;
    }

    return minLen;
    }
};

//{ Driver Code Starts.

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--)
	{
		int n,x;
		cin>>n>>x;
		int a[n];
		for(int i=0;i<n;i++)
		cin>>a[i];
		Solution obj;
		cout<<obj.smallestSubWithSum(a,n,x)<<endl;
	}
	return 0;
}
// } Driver Code Ends
