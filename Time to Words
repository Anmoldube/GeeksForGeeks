//{ Driver Code Starts
// Initial Template for C++
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//Back-end complete function Template for C++
class Solution {
  public:
    //Function to convert time in hours and minutes to words.
    string timeToWord(int H, int M){
        //Array to store the words for numbers from 0 to 29.
        char nums[][64] = { "zero", "one", "two", "three", "four", 
                        "five", "six", "seven", "eight", "nine", 
                        "ten", "eleven", "twelve", "thirteen", 
                        "fourteen", "fifteen", "sixteen", "seventeen", 
                        "eighteen", "nineteen", "twenty", "twenty one", 
                        "twenty two", "twenty three", "twenty four", 
                        "twenty five", "twenty six", "twenty seven", 
                        "twenty eight", "twenty nine", 
                      }; 
  
        if (M == 0){
            //If minutes is 0, return the hour word followed by "o' clock".
            string s=nums[H]; 
            return s+" o' clock";
        } 
        else if (M == 1){ 
            //If minutes is 1, return "one minute past" followed by the hour word.
            string s=nums[H];
            return "one minute past "+s; 
        }
        else if (M == 59){ 
            //If minutes is 59, return "one minute to" followed by the word of the next hour.
            string s=nums[(H % 12) + 1];
            return "one minute to "+s; 
        }
        else if (M == 15){ 
            //If minutes is 15, return "quarter past" followed by the hour word.
            string s=nums[H];
            return "quarter past "+s; 
        }
        else if (M == 30){ 
            //If minutes is 30, return "half past" followed by the hour word.
            string s=nums[H];
            return "half past "+s; 
        }
        else if (M == 45){ 
            //If minutes is 45, return "quarter to" followed by the word of the next hour.
            string s=nums[(H % 12) + 1];
            return "quarter to "+s; 
        }
        else if (M <= 30){ 
            //If minutes is less than or equal to 30, return the word of minutes followed by "minutes past" and the hour word.
            string s=nums[M];
            string s1=nums[H];
            return s+" minutes past "+s1; 
        }
        else if (M > 30){ 
            //If minutes is greater than 30, return the word of (60 - minutes) followed by "minutes to" and the word of the next hour.
            string s=nums[60 - M];
            string s1=nums[(H % 12) + 1];
            return s+" minutes to "+s1; 
        }
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int  H, M;
        cin >> H >> M;
        Solution ob;
        cout<<ob.timeToWord(H,M)<<endl;
    }
    return 0;
}

// } Driver Code Ends
